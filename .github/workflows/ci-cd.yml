name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  JAVA_VERSION: '21'
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID || 'test-client-id' }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET || 'test-client-secret' }}
      MONGODB_URI: ${{ secrets.MONGODB_URI || 'mongodb://localhost:27017/test' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Maven wrapper permissions
        run: chmod +x mvnw

      - name: Validate Maven wrapper
        run: ./mvnw -v

      - name: Run unit tests with coverage
        run: ./mvnw clean test jacoco:report
        env:
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID || 'test-client-id' }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET || 'test-client-secret' }}
          MONGODB_URI: ${{ secrets.MONGODB_URI || 'mongodb://localhost:27017/test' }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            target/surefire-reports/
            target/failsafe-reports/
          retention-days: 7

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: test
    env:
      GOOGLE_CLIENT_ID: 'test-client-id'
      GOOGLE_CLIENT_SECRET: 'test-client-secret'
      MONGODB_URI: 'mongodb://localhost:27017/test'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Maven wrapper permissions
        run: chmod +x mvnw

      - name: Run PMD static analysis
        run: ./mvnw pmd:check
        env:
          GOOGLE_CLIENT_ID: 'test-client-id'
          GOOGLE_CLIENT_SECRET: 'test-client-secret'
          MONGODB_URI: 'mongodb://localhost:27017/test'

      - name: Run Checkstyle
        run: ./mvnw checkstyle:check
        env:
          GOOGLE_CLIENT_ID: 'test-client-id'
          GOOGLE_CLIENT_SECRET: 'test-client-secret'
          MONGODB_URI: 'mongodb://localhost:27017/test'

      - name: Run OWASP dependency check
        run: ./mvnw dependency-check:check
        env:
          GOOGLE_CLIENT_ID: 'test-client-id'
          GOOGLE_CLIENT_SECRET: 'test-client-secret'
          MONGODB_URI: 'mongodb://localhost:27017/test'

      - name: Upload quality reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: quality-reports
          path: |
            target/site/jacoco/
            target/pmd.xml
            target/checkstyle-result.xml
          retention-days: 7

  build:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: [test, code-quality]
    env:
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Maven wrapper permissions
        run: chmod +x mvnw

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests
        env:
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: application-jar
          path: target/*.jar
          retention-days: 7

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    env:
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Maven wrapper permissions
        run: chmod +x mvnw

      - name: Build application
        run: ./mvnw clean package -DskipTests
        env:
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t proyectoieti:latest .
          docker images
